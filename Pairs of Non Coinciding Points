//https://practice.geeksforgeeks.org/problems/pairs-of-non-coinciding-points4141/1

lass Solution {
    static int numOfPairs(int[] X, int[] Y, int N) {
        // code here
        int res = 0;
        
        int xres = 0;
        HashMap<Integer, Integer> xmap = new HashMap<>();
        for(int i = 0; i < N; i++){
            int x = X[i];
            xmap.put(x, xmap.getOrDefault(x, 0) + 1);
        }
        
        for(int x: xmap.keySet()){
            int freq = xmap.get(x);
            xres += (freq * (freq - 1)) / 2;    
        }
        
        int yres = 0;
        HashMap<Integer, Integer> ymap = new HashMap<>();
        for(int i = 0; i < N; i++){
            int y = Y[i];
            ymap.put(y, ymap.getOrDefault(y, 0) + 1);
        }
        
        for(int y: ymap.keySet()){
            int freq = ymap.get(y);
            yres += (freq * (freq - 1)) / 2;    
        }
        
        int xyres = 0;
        HashMap<String, Integer> xymap = new HashMap<>();
        for(int i = 0; i < N; i++){
            int x = X[i];
            int y = Y[i];
            String key = x + "#" + y;
            xymap.put(key, xymap.getOrDefault(key, 0) + 1);
        }
        
        for(String key: xymap.keySet()){
            int freq = xymap.get(key);
            xyres += (freq * (freq - 1)) / 2;    
        }
        
        res = xres + yres - 2*xyres;
        
        return res;
    }
}
